;; -*- coding: utf-8 ; mode: scheme-*-
;; foldlist.kahua
;;
;;  Copyright (c) 2004-2007 Scheme Arts, L.L.C., All rights reserved.
;;  Copyright (c) 2004-2007 Time Intermedia Corporation, All rights reserved.
;;  See COPYING for terms and conditions of using this software
;;
;; $Id: foldlist.kahua,v 1.6 2007/06/26 03:36:54 bizenn Exp $
;;
;; This example shows simple application by kahua.
;;

(define (page ttl . elems)
  (html/
   (head/ (title/ ttl))
   (apply body/ elems)))

(define *tree*
  '(a1 ((c1 d1 d2)) b1))
;; 
;; foldlist structure
;; leaf:
;;   not pair
;; branch:
;; (branch-open? branch-entry [entry_1 ...])

(define (tree->foldlist tree default)
  (if (pair? tree)
      (cons default
	    (map (lambda (t)
		   (tree->foldlist t default))
		 (if (pair? (car tree))
		     (cons "..." tree)
		       tree)))
      (x->string tree)))

(define (foldlist/ tree default)
  (let ((fl (tree->foldlist tree default)))
    (define (foldlist-view/)
      (page "foldlist sample"
	    (div/ (ul/ (open-tree fl))
		  (a/ (@/ (href "./")) "goto start"))))

    (define (make/acont/ tree open?)
      (a/cont/ (@@/ (cont (lambda ()
			    (set-car! tree (not open?))
			    (foldlist-view/))))
	       (if open? "[close] " "[open] ")))
      
    (define (open-tree tree)
      (if (pair? tree)
	  (if (car tree)
	      ; open tree
	      (li/ (make/acont/ tree #t) (cadr tree)
		   (ul/ (map/ (cut open-tree <>) (cddr tree))))
 	      ; close tree
	      (li/ (make/acont/ tree #f) (cadr tree)))
	  (li/ tree)))
      
    (foldlist-view/)))

(define (foldlist-start)
  (define viewer
    (entry-lambda (:keyword content default)
      (let ((default (and (equal? default "true") #t))
	    (sexp (read-from-string content)))
	(foldlist/ sexp default))))
  (page "foldlist"
	(div/
	 (h1/ "fold list sample")
	 (form/cont/ (@@/ (cont viewer))
		     (div/
		      "S-expression to be displayed"
		      (div/
		       (textarea/ (@/ (name "content")
				      (cols "80")
				      (rows "20"))
				  "(a b (c d (e f) g) h)")))
		     (div/
		      (input/ (@/ (type "checkbox")
				  (name "default")
				  (value "true")))
		      "Open all nodes")
		     (div/
		      (input/ (@/ (type "submit") 
				  (name "submit")
				  (value "Do it"))))
		     ))))

(initialize-main-proc foldlist-start)


