;;-*-Scheme-*-
;; sample kahua application using kahua.app.elua.alt
;;
;;  Copyright (c) 2003 Scheme Arts, L.L.C., All rights reserved.
;;  Copyright (c) 2003 Time Intermedia Corporation, All rights reserved.
;;  See COPYING for terms and conditions of using this software
;;
;; $Id: lambdabooks.kahua,v 1.7 2003/12/23 22:37:51 shiro Exp $

(use file.util)
(use util.list)
(use srfi-2)
(use gauche.logger)

(primary-database-name
 (build-path (ref (kahua-config) 'working-directory)
             "lambdabooks"))

(log-open (kahua-logpath "lambdabooks.log"))

(load "lambdabooks/login.kahua")
(load "lambdabooks/lister.kahua")
(load "lambdabooks/book.kahua")
(load "lambdabooks/review.kahua")
(load "lambdabooks/partner.kahua")
(load "lambdabooks/useradmin.kahua")

;;========================================================
;; Main application
;;

;; Standard page construction ----------------------------
(define (imgpath filename)
  (kahua-static-document-url #`"lambdabooks/images/,filename"))

(define (img-logo)
  `(img (@ (src ,(imgpath "lambda-books-logo.png")) (alt "[lambda books]")
           (border "0") (width 216) (height 47))))

(define (img-separator)
  `(img (@ (src ,(imgpath "separator.jpg")) (alt "[separator]")
           (width 480) (height 4))))

(define (standard-frame contents context cont)
  (cont `((html
	   (head (title "Lambda books"))
	   (body (@ (style "background-color: #ffffff"))
		 ,@(standard-header context)
		 ,@contents
		 ,@(standard-footer context))))
	context))

(define (standard-frame-cont nodes context)
  (standard-frame nodes context (cut interp-html <> <>)))

(define (standard-page contents context cont)
  (standard-frame `((table (tr (td (@ (valign "top"))
                                   ,@(standard-menu context))
                               (td (@ (valign "top"))
                                   ,@(if (null? contents)
					 (default-contents)
					 contents)))))
		  context cont))

(define (standard-page-cont nodes context)
  (standard-page nodes context (cut interp-html <> <>)))

(define (standard-header context)
  `((a/cont ,(img-logo))
    (br)
    ,(img-separator)))

(define-entry (book-list-page context)
  (show-book-list context standard-page-cont))

(define-entry (user-admin-page context)
  (user-admin-panel context standard-page-cont))

(define-entry (partner-page context)
  (partnership-info context standard-page-cont))

(define (standard-menu context)
  `((table
     (tr (td ,(user-box context
			standard-frame-cont
			standard-page-cont)))
     (tr (td (a/cont (@@ (cont book-list-page))
		     "Books")))
     (tr (td (a/cont (@@ (cont partner-page))
		     "Partnership")))
     ;; admin roleのユーザーにのみ、リンクを見せる"
     (tr (@@ (require-role admin))
	 (td (a/cont (@@ (cont user-admin-page)) "[ユーザ管理]"))))))

(define (standard-footer context)
  `(,(img-separator)
    (div (@ (style "text-align: right"))
         "Powered by " (a (@ (href "http://www.kahua.org/")) "Kahua"))))

(define (default-contents)
  (define (new-title key book)
    `((tr (td (b ,(ref book 'title))))
      (tr (td (@ (style "text-align: right"))
              ,(ref book 'authors) "著"))
      (tr (td (@ (style "text-align: right"))
              "キャンペーン価格：" ,(ref book 'price) "円"))
      (tr (td (@ (style "text-align: right"))
              (a/cont (@@ (cont ,(lambda (context)
                                   (show-book-detail key
						     context
                                                     standard-page-cont))))
                      "詳しい情報を見る...")))))

  `((h2 "最新ニュース")
    (p "本サイトは、Kahuaフレームワークのデモサイトです。")
    (h2 "新刊情報")
    (p "サイト開設記念特別キャンペーン価格にて販売中!")
    ;; ダミーデータ。最初の2冊を表示
    ,(let ((book1 (find-kahua-instance <book> "0"))
           (book2 (find-kahua-instance <book> "1")))
       (if (and book1 book2)
         `(table
           ,@(append-map new-title (list "0" "1") (list book1 book2)))
         '(p "(書籍データがありません)"))))
  )

(initialize-main-proc
 (lambda (context)
   (standard-page '() context (cut interp-html <> <>))))
