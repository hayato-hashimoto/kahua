;;
;; Kahua client interface for Emacs
;;
;;  Copyright (c) 2003 Scheme Arts, L.L.C., All rights reserved.
;;  Copyright (c) 2003 Time Intermedia Corporation, All rights reserved.
;;
;; $Id: kahua.el.in,v 1.4 2005/12/18 12:59:45 cut-sea Exp $
;;

(require 'cmuscheme)
(require 'kahua-shell)

;; Custom Variables:
(defgroup kahua nil
  "*Support for editing and running remote kahua server application."
  :group 'scheme
  :prefix "kahua-"
  :link '(url-link "http://www.kahua.org"))

(defcustom kahua-ssh-mode t
  "*If non nil, run kahua-shell via ssh."
  :type 'boolean
  :group 'kahua)

(defcustom kahua-ssh-opts '("-t")
  "*Options for ssh which run kahua-shell."
  :type '(repeat string)
  :group 'kahua)

(defcustom kahua-default-server ""
  "*Default kahua server."
  :type 'string
  :group 'kahua)

(defcustom kahua-default-user (or (getenv "USER")
				  (getenv "LOGNAME")
				  (user-login-name))
  "*Default username for running kahua server."
  :type 'string
  :group 'kahua)

(defcustom kahua-user-mode ""
  "*User name for kahua-shell. If empty, run kahua-shell without -user option."
  :type 'string
  :group 'kahua)


(add-hook 'inferior-scheme-mode-hook
          '(lambda () 
             (set-buffer-process-coding-system 'euc-jp 'euc-jp)))

(defvar *kahua-admin* "##bindir##/kahua-admin")

(defun run-kahua ()
  "Run kahua Emacs interface in *scheme* buffer.  Make sure you're not running other inferior scheme."
  (interactive)
  (run-scheme *kahua-admin*))

(provide 'kahua)

;; Local variables:
;; mode: emacs-lisp
;; end:



